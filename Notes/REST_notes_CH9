**Two-Step Design Procedure:**
1. Choose a media type to use in your representations.
2. Write a profile that covers everything else.

**Seven-Step Design Procedure:**
1. List all the pieces of information a client might want to get out of your API or put
into your API.  These are also referred to as semantic descriptors.
2. Draw a state diagram for the API.  Each box is a representation, while the arrows are state transitions which get triggered by HTTP requests.
3. Try to adjust your semantic descriptors and link relations with others from existing profiles so as to find something that works.
4. Choose a media type compatible with your protocol and application semantics.
5. Write a profile that documents your application semantics.
6. Develop an HTTP server that implements the state diagram from step 3.
7. Publish your billboard URL.

> Think of the HTTP back-and-forth between client and server. A resource receives a
> GET request and serves a representation with a certain media type. The representation
> contains hypermedia controls, which describe possible state transitions. A client activates
> a state transition by sending an HTTP request to another resource, which implements
> the state change and sends another representation. The client never directly interacts
> with a resource.

* Each URL should in a way identify the resource at its location.
* Don't choose names that you like, choose names that will make sense to people using your API.
* Keep the amount of human readable documents associating your API to a minimum.  This will leave less room for human interpretation.